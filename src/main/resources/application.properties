server.port=8080
spring.application.name=company-frame
#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/suse_shops?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.druid.username=root
spring.datasource.druid.password=root

##################    连接池配置    ################
#连接池建立时创建的初始化连接数
spring.datasource.druid.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=30000
#是否在获得连接后检测其可用性
spring.datasource.druid.test-on-borrow=false
#是否在连接放回连接池后检测其可用性
spring.datasource.druid.test-on-return=false
#是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 监控后台账号和密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

#日志配置
logging.path=logs
logging.file=${logging.path}/${spring.application.name}.log
logging.level.com.yingxue.lesson=debug

#mybatisPlus 配置 (别名 + xml扫描路径)
mybatis-plus.mapper-locations=classpath:com/frame/business/mapper/xml/*.xml
mybatis-plus.type-aliases-package=com.frame.business.entity
mybatis-plus.check-config-location=false
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# ---- [ -￥==￥- ] ------

#swagger 开关
swagger.enable=true

#redis
spring.redis.host=www.izks.site
spring.redis.port=6379
#spring.redis.password=
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-idle=30
spring.redis.lettuce.pool.min-idle=1
spring.redis.lettuce.pool.max-wait=PT10S
spring.redis.timeout=PT10S

spring.devtools.restart.poll-interval=3000ms
spring.devtools.restart.quiet-period=2999ms


#JWT 密钥
jwt.secretKey=78944878877848fg)
jwt.accessTokenExpireTime=PT2H
jwt.refreshTokenExpireTime=PT8H
jwt.refreshTokenExpireAppTime=P30D
jwt.issuer=zk

#### 阿里云RAM 的 ID 和 secret
ali.access-key-id=#
ali.access-key-secret=#

# sms （短信模板）
ali.sms.sign-name=#
ali.sms.template-code=#

# oss
ali.oss.endpoint=oss-cn-chengdu.aliyuncs.com
ali.oss.bucket-name=suse-mall

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 验证码有效时间 单位 min
captcha.validTime=5

##################### https://open.alipay.com/develop/sandbox/app (查看自己的配置信息)################################
# APPID, 修改为自己的appID
pay.ali.app_id=#
# 应用私钥 (替换为自己的阿里开发密钥)
pay.ali.app_private_key=#
pay.ali.charset=UTF-8
# 应用公钥
pay.ali.alipay_public_key=#
pay.ali.sign_type=RSA2


# 服务器异步通知页面路径(完整路径且不能加?id=123这类自定义参数)，必须外网可以正常访问 (后台异步回调URL)
pay.ali.notify_url=http://localhost/pay/success/back

# 页面跳转同步通知页面路径，必须外网可以正常访问 商户可以自定义同步跳转地址 （前端网页地址）
pay.ali.return_url=http://localhost/pay/redirect/success

# 支付宝网关 （沙箱环境网关为： https://openapi.alipaydev.com/gateway.do、正式环境网关为：https://openapi.alipay.com/gateway.do ）
pay.ali.serverUrl=https://openapi.alipaydev.com/gateway.do
